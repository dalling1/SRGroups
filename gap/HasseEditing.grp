
#Instructions:
# 1. for level 1, read how many groups there are on this level, let this be denoted m 
	# a. Create an array of this length [1..m]
	# b. Assign this many different graphs to the one text document that will be used to hold all of the Hasse Diagram information
	

# 2. For the elements in the extensions of each group on level 1, perform the Hasse Diagram function
	# That is we want to perform the HasseDiagram function on each 

if lev = 1 then 
	m:=Length(SRGroup(deg,lev));
	levelOneList:=[];
	j:=1;
	i:=1;
	for j in [1..m] do
		levelOneList[j]:=[];
			for i in [1..Length(SRGroup(deg,lev,j)[4])] do
				levelOneList[j][i]:= SRGroup(deg,lev,j)[4][i];
			od;
	od;
	#Further Hasse?
else
	for tempLev in [1..lev] do
		if tempLev = 1 then
			m:=Length(SRGroup(deg,tempLev));
			levelOneList:=[];
			j:=1;
			i:=1;
			for j in [1..m] do
				levelOneList[j]:=[];
					for i in [1..Length(SRGroup(deg,tempLev,j)[4])] do
						levelOneList[j][i]:= SRGroup(deg,tempLev,j)[4][i];
					od;
			od;
		else
			Print("Hi");
		fi;
	od;
fi;
	# Need to do the above stuff for level one to make sure it has been sorted on the first level
	# Then we should keep sorting for each of the following levels using the same levels as they were sorted on the first level
dir:=DirectoriesPackageLibrary("SRGroups","Digraphs");
fName:=[];